---
- hosts: Task
  become: true
  remote_user: ubuntu
  become_user: root
  tasks:
    - name: load vars
      include_vars:
        file: variables.yml

    - name: Install required packages
      apt:
        name: ["unzip", "ca-certificates", "curl", "apt-transport-https"]
        state: present

    - name: Check if AWS CLI is installed
      stat:
        path: /usr/local/aws-cli/v2/current
      register: aws_cli_installed

    - name: Install AWS CLI
      shell: >
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" &&
        unzip awscliv2.zip &&
        ./aws/install -i /usr/local/aws-cli -b /usr/local/bin
      when: not aws_cli_installed.stat.exists

    - name: Create .aws directory
      file:
        path: "/home/ubuntu/.aws"
        state: directory

    - name: Create credentials file with AWS access keys
      copy:
        content: |
          [default]
          aws_access_key_id = "{{ aws_access_key }}"
          aws_secret_access_key = "{{ aws_secret_key }}"
        dest: "/home/ubuntu/.aws/credentials"

    - name: Install kubectl
      command: "{{ item }}"
      with_items:
        - "curl -O https://storage.googleapis.com/kubernetes-release/release/{{ kubectl_version }}/bin/linux/amd64/kubectl"
        - "chmod +x ./kubectl"
        - "mv ./kubectl /usr/local/bin/"

    - name: Configure kubectl for the user
      lineinfile:
        path: "$HOME/.bashrc"
        line: "export PATH=$HOME/bin:$PATH"
    - name: Set ownership for ~/.aws directory
      file:
        path: /home/ubuntu/.aws
        state: directory
        owner: ubuntu
        group: ubuntu

    - name: Set permissions for ~/.aws directory
      file:
        path: /home/ubuntu/.aws
        state: directory
        mode: '0700'
        
    - name: Fetch EKS Cluster status
      command: "aws eks --region {{ aws_region }} describe-cluster --name task-EKS-Cluster --query cluster.status"
      register: eks_cluster_status

    - name: Print EKS Cluster status
      debug:
        var: eks_cluster_status.stdout

    - name: Update kubeconfig
      command: "aws eks --region {{ aws_region }} update-kubeconfig --name task-EKS-Cluster"

    - name: Get nodes
      command: "kubectl get nodes"
      register: nodes_server
      changed_when: false

    - name: Display nodes
      debug:
        var: nodes_server.stdout

    - name: Update APT package manager cache
      apt:
        update_cache: yes

    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Change ownership of /var/run/docker.sock
      file:
        path: /var/run/docker.sock
        owner: root
        group: docker
        state: touch

    - name: Grant read-write permissions to docker group for /var/run/docker.sock
      file:
        path: /var/run/docker.sock
        mode: 'g+rw'

